nqubits = 3;
name = "3v0";
nstates = 2;

amplitude[x1_,y1_,x2_,y2_] := (Exp[-3.0 I y2]*(Exp[-3.0 I y1] (1 Cos[x1]^3 + 1 (-I Sin[x1])^3) + Exp[1.0 I y1] (3 (-I Sin[x1])^1 Cos[x1]^2 + 3 (-I Sin[x1])^2 Cos[x1]^1))*(1 Cos[x2]^3 + 1 (-I Sin[x2])^3) + Exp[1.0 I y2]*(Exp[-3.0 I y1] (1 (-I Sin[x1])^1 Cos[x1]^2 + 1 (-I Sin[x1])^2 Cos[x1]^1) + Exp[1.0 I y1] (1 Cos[x1]^3 + 1 (-I Sin[x1])^3 + 2 (-I Sin[x1])^2 Cos[x1]^1 + 2 (-I Sin[x1])^1 Cos[x1]^2))*(3 (-I Sin[x2])^1 Cos[x2]^2 + 3 (-I Sin[x2])^2 Cos[x2]^1))/Sqrt[2^nqubits];
probability[x1_,y1_,x2_,y2_] := Abs[amplitude[x1,y1,x2,y2]]^2;

result = Maximize[{nstates*probability[a, b, c, d], 0 <= a < Pi/2, 0 <= b < Pi, 0 <= c < Pi/2, 0 <= d < Pi}, {a, b, c, d}, Method -> {"SimulatedAnnealing", "PerturbationScale" -> 15}];
Print[name,  ": ", result]

n = Pi;
