nqubits = 8;
name = "8v3";
nstates = 112;

amplitude[x_,y_] := (Exp[-28.0 I y] (1 (I Sin[x])^3 Cos[x]^5 + 1 (I Sin[x])^5 Cos[x]^3) + Exp[-14.0 I y] (3 (I Sin[x])^2 Cos[x]^6 + 3 (I Sin[x])^6 Cos[x]^2 + 10 (I Sin[x])^4 Cos[x]^4) + Exp[-4.0 I y] (3 (I Sin[x])^1 Cos[x]^7 + 3 (I Sin[x])^7 Cos[x]^1 + 25 (I Sin[x])^3 Cos[x]^5 + 25 (I Sin[x])^5 Cos[x]^3) + Exp[2.0 I y] (1 Cos[x]^8 + 1 (I Sin[x])^8 + 25 (I Sin[x])^2 Cos[x]^6 + 25 (I Sin[x])^6 Cos[x]^2 + 60 (I Sin[x])^4 Cos[x]^4) + Exp[4.0 I y] (5 (I Sin[x])^1 Cos[x]^7 + 5 (I Sin[x])^7 Cos[x]^1 + 30 (I Sin[x])^3 Cos[x]^5 + 30 (I Sin[x])^5 Cos[x]^3))/Sqrt[2^nqubits];
amplitude2[x_,y_] := (Exp[-28.0 I y] (1 (I Sin[x])^3 Cos[x]^5 + 1 (I Sin[x])^5 Cos[x]^3) + Exp[-14.0 I y] (3 (I Sin[x])^2 Cos[x]^6 + 3 (I Sin[x])^6 Cos[x]^2 + 10 (I Sin[x])^4 Cos[x]^4) + Exp[-4.0 I y] (3 (I Sin[x])^1 Cos[x]^7 + 3 (I Sin[x])^7 Cos[x]^1 + 25 (I Sin[x])^3 Cos[x]^5 + 25 (I Sin[x])^5 Cos[x]^3) + Exp[2.0 I y] (1 Cos[x]^8 + 1 (I Sin[x])^8 + 25 (I Sin[x])^2 Cos[x]^6 + 25 (I Sin[x])^6 Cos[x]^2 + 60 (I Sin[x])^4 Cos[x]^4) + Exp[4.0 I y] (5 (I Sin[x])^1 Cos[x]^7 + 5 (I Sin[x])^7 Cos[x]^1 + 30 (I Sin[x])^3 Cos[x]^5 + 30 (I Sin[x])^5 Cos[x]^3));
probability[x_, y_] := Abs[amplitude[x, y]]^2;

result = Maximize[{nstates*probability[a, b], 0 < a < Pi/2, 0 < b < Pi}, {a, b}, Method -> {"SimulatedAnnealing", "PerturbationScale" -> 15}];
Print[name,  ": ", result]

f = probability[c, d]; n = Pi;

Plot3D[f, {c, 0, n/2}, {d, -n, n}, PlotRange -> All]
ContourPlot[probability[x, y], {x, 0, n/2}, {y, 0, n}, PlotLegends -> Automatic, Contours -> 30]
