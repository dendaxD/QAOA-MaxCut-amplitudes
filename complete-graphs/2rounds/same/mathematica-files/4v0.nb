nqubits = 4;
name = "4v0";
nstates = 2;

amplitude[x_,y_] := (Exp[-6.0 I y]*(Exp[-6.0 I y] (1 Cos[x]^4 + 1 (-I Sin[x])^4) + Exp[-0.0 I y] (4 (-I Sin[x])^1 Cos[x]^3 + 4 (-I Sin[x])^3 Cos[x]^1) + Exp[2.0 I y] (6 (-I Sin[x])^2 Cos[x]^2))*(1 Cos[x]^4 + 1 (-I Sin[x])^4) + Exp[-0.0 I y]*(Exp[-6.0 I y] (1 (-I Sin[x])^1 Cos[x]^3 + 1 (-I Sin[x])^3 Cos[x]^1) + Exp[-0.0 I y] (1 Cos[x]^4 + 1 (-I Sin[x])^4 + 6 (-I Sin[x])^2 Cos[x]^2) + Exp[2.0 I y] (3 (-I Sin[x])^1 Cos[x]^3 + 3 (-I Sin[x])^3 Cos[x]^1))*(4 (-I Sin[x])^1 Cos[x]^3 + 4 (-I Sin[x])^3 Cos[x]^1) + Exp[2.0 I y]*(Exp[-6.0 I y] (2 (-I Sin[x])^2 Cos[x]^2) + Exp[-0.0 I y] (4 (-I Sin[x])^1 Cos[x]^3 + 4 (-I Sin[x])^3 Cos[x]^1) + Exp[2.0 I y] (1 Cos[x]^4 + 1 (-I Sin[x])^4 + 4 (-I Sin[x])^2 Cos[x]^2))*(6 (-I Sin[x])^2 Cos[x]^2))/Sqrt[2^nqubits];
probability[x_,y_] := Abs[amplitude[x,y]]^2;

result = Maximize[{nstates*probability[a, b], 0 <= a < Pi/2, 0 <= b < Pi}, {a, b}, Method -> {"SimulatedAnnealing", "PerturbationScale" -> 15}];
Print[name,  ": ", result]

n = Pi;
