nqubits = 10;
name = "10v4";
nstates = 420;

amplitude[x_,y_] := (Exp[-45.0 I y] (1 (I Sin[x])^4 Cos[x]^6 + 1 (I Sin[x])^6 Cos[x]^4) + Exp[-36.0 I y] (4 (I Sin[x])^3 Cos[x]^7 + 4 (I Sin[x])^7 Cos[x]^3 + 12 (I Sin[x])^5 Cos[x]^5) + Exp[-29.0 I y] (6 (I Sin[x])^2 Cos[x]^8 + 6 (I Sin[x])^8 Cos[x]^2 + 39 (I Sin[x])^4 Cos[x]^6 + 39 (I Sin[x])^6 Cos[x]^4) + Exp[-24.0 I y] (4 (I Sin[x])^1 Cos[x]^9 + 4 (I Sin[x])^9 Cos[x]^1 + 56 (I Sin[x])^3 Cos[x]^7 + 56 (I Sin[x])^7 Cos[x]^3 + 120 (I Sin[x])^5 Cos[x]^5) + Exp[-21.0 I y] (1 Cos[x]^10 + 1 (I Sin[x])^10 + 39 (I Sin[x])^2 Cos[x]^8 + 39 (I Sin[x])^8 Cos[x]^2 + 170 (I Sin[x])^4 Cos[x]^6 + 170 (I Sin[x])^6 Cos[x]^4) + Exp[-20.0 I y] (6 (I Sin[x])^1 Cos[x]^9 + 6 (I Sin[x])^9 Cos[x]^1 + 60 (I Sin[x])^3 Cos[x]^7 + 60 (I Sin[x])^7 Cos[x]^3 + 120 (I Sin[x])^5 Cos[x]^5))/Sqrt[2^nqubits];
amplitude2[x_,y_] := (Exp[-45.0 I y] (1 (I Sin[x])^4 Cos[x]^6 + 1 (I Sin[x])^6 Cos[x]^4) + Exp[-36.0 I y] (4 (I Sin[x])^3 Cos[x]^7 + 4 (I Sin[x])^7 Cos[x]^3 + 12 (I Sin[x])^5 Cos[x]^5) + Exp[-29.0 I y] (6 (I Sin[x])^2 Cos[x]^8 + 6 (I Sin[x])^8 Cos[x]^2 + 39 (I Sin[x])^4 Cos[x]^6 + 39 (I Sin[x])^6 Cos[x]^4) + Exp[-24.0 I y] (4 (I Sin[x])^1 Cos[x]^9 + 4 (I Sin[x])^9 Cos[x]^1 + 56 (I Sin[x])^3 Cos[x]^7 + 56 (I Sin[x])^7 Cos[x]^3 + 120 (I Sin[x])^5 Cos[x]^5) + Exp[-21.0 I y] (1 Cos[x]^10 + 1 (I Sin[x])^10 + 39 (I Sin[x])^2 Cos[x]^8 + 39 (I Sin[x])^8 Cos[x]^2 + 170 (I Sin[x])^4 Cos[x]^6 + 170 (I Sin[x])^6 Cos[x]^4) + Exp[-20.0 I y] (6 (I Sin[x])^1 Cos[x]^9 + 6 (I Sin[x])^9 Cos[x]^1 + 60 (I Sin[x])^3 Cos[x]^7 + 60 (I Sin[x])^7 Cos[x]^3 + 120 (I Sin[x])^5 Cos[x]^5));
probability[x_, y_] := Abs[amplitude[x, y]]^2;

result = Maximize[{nstates*probability[a, b], 0 < a < Pi/2, 0 < b < Pi}, {a, b}, Method -> {"SimulatedAnnealing", "PerturbationScale" -> 15}];
Print[name,  ": ", result]

f = probability[c, d]; n = Pi;

Plot3D[f, {c, 0, n/2}, {d, -n, n}, PlotRange -> All]
ContourPlot[probability[x, y], {x, 0, n/2}, {y, 0, n}, PlotLegends -> Automatic, Contours -> 30]
