nqubits = 4;
label = "4v2";
nstates = 6;

amplitude[x_,y_] := (Exp[-6.0 I y] (2 (I Sin[x])^2 Cos[x]^2) + Exp[-0.0 I y] (4 (I Sin[x])^1 Cos[x]^3 + 4 (I Sin[x])^3 Cos[x]^1) + Exp[2.0 I y] (Cos[x]^4 + (I Sin[x])^4 + 4 (I Sin[x])^2 Cos[x]^2))/Sqrt[2^nqubits];
amplitude2[x_,y_] := (Exp[-6.0 I y] (2 (I Sin[x])^2 Cos[x]^2) + Exp[-0.0 I y] (4 (I Sin[x])^1 Cos[x]^3 + 4 (I Sin[x])^3 Cos[x]^1) + Exp[2.0 I y] (Cos[x]^4 + (I Sin[x])^4 + 4 (I Sin[x])^2 Cos[x]^2));
probability[x_, y_] := Abs[amplitude[x, y]]^2;

result = Maximize[{nstates*probability[a, b], 0 < a < Pi/2, 0 < b < Pi}, {a, b}, Method -> {"SimulatedAnnealing", "PerturbationScale" -> 15}];
Print[label,  ": ", result]

f = probability[c, d]; n = Pi;

Plot3D[f, {c, 0, n/2}, {d, -n, n}, PlotRange -> All]
ContourPlot[probability[x, y], {x, 0, n/2}, {y, 0, n}, PlotLegends -> Automatic, Contours -> 30]
