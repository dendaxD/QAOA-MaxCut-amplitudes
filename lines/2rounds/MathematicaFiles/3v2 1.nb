$Conjugate[x_] := x /. Complex[a_, b_] :> a - I b;
function[x_, y_] := $Conjugate[Exp[2 I y] (Exp[2 I y] (Cos[x]^3 + (I Sin[x])^3) + Exp[0 I y] (2 (I Sin[x])^1 Cos[x]^2 + 2 (I Sin[x])^2 Cos[x]^1) + Exp[-2 I y] ((I Sin[x])^1 Cos[x]^2 + (I Sin[x])^2 Cos[x]^1)) ((I Sin[x])^1 Cos[x]^2 + (I Sin[x])^2 Cos[x]^1) + Exp[0 I y] (Exp[2 I y] ((I Sin[x])^1 Cos[x]^2 + (I Sin[x])^2 Cos[x]^1) + Exp[0 I y] ((I Sin[x])^1 Cos[x]^2 + (I Sin[x])^2 Cos[x]^1 + Cos[x]^3 + (I Sin[x])^3) + Exp[-2 I y] ((I Sin[x])^1 Cos[x]^2 + (I Sin[x])^2 Cos[x]^1)) ((I Sin[x])^1 Cos[x]^2 + (I Sin[x])^2 Cos[x]^1 + Cos[x]^3 + (I Sin[x])^3) + Exp[-2 I y] (Exp[2 I y] ((I Sin[x])^1 Cos[x]^2 + (I Sin[x])^2 Cos[x]^1) + Exp[0 I y] (2 (I Sin[x])^1 Cos[x]^2 + 2 (I Sin[x])^2 Cos[x]^1) + Exp[-2 I y] (Cos[x]^3 + (I Sin[x])^3)) ((I Sin[x])^1 Cos[x]^2 + (I Sin[x])^2 Cos[x]^1)]*(Exp[2 I y] (Exp[2 I y] (Cos[x]^3 + (I Sin[x])^3) + Exp[0 I y] (2 (I Sin[x])^1 Cos[x]^2 + 2 (I Sin[x])^2 Cos[x]^1) + Exp[-2 I y] ((I Sin[x])^1 Cos[x]^2 + (I Sin[x])^2 Cos[x]^1)) ((I Sin[x])^1 Cos[x]^2 + (I Sin[x])^2 Cos[x]^1) + Exp[0 I y] (Exp[2 I y] ((I Sin[x])^1 Cos[x]^2 + (I Sin[x])^2 Cos[x]^1) + Exp[0 I y] ((I Sin[x])^1 Cos[x]^2 + (I Sin[x])^2 Cos[x]^1 + Cos[x]^3 + (I Sin[x])^3) + Exp[-2 I y] ((I Sin[x])^1 Cos[x]^2 + (I Sin[x])^2 Cos[x]^1)) ((I Sin[x])^1 Cos[x]^2 + (I Sin[x])^2 Cos[x]^1 + Cos[x]^3 + (I Sin[x])^3) + Exp[-2 I y] (Exp[2 I y] ((I Sin[x])^1 Cos[x]^2 + (I Sin[x])^2 Cos[x]^1) + Exp[0 I y] (2 (I Sin[x])^1 Cos[x]^2 + 2 (I Sin[x])^2 Cos[x]^1) + Exp[-2 I y] (Cos[x]^3 + (I Sin[x])^3)) ((I Sin[x])^1 Cos[x]^2 + (I Sin[x])^2 Cos[x]^1))
ammount = 3;
name = "3v2 1";
states = 4;

k = 0.1;

max = function[0, 0]; x = 0; y = 0;
For[β = 0 , β <= Pi, β = β + k,
 	For[γ = 0 , γ <= Pi, γ = γ + k,
  		max2 = function[β, γ];
  		If[max2 > max, {x = β, y = γ}];
  		max = Max[max, max2];
  	]
 ]

result = NMaximize[{Re[states*function[a, b]/(2^ammount)], x - k < a < x + k, y - k < b < y + k}, {a, b}, Method -> {"SimulatedAnnealing", "PerturbationScale" -> 3}];
Print[name,  ": ", result]

f = function[c, d]; n = Pi;

Plot3D[f,{c,-n,n},{d,-n,n}, PlotRange -> All]

ContourPlot[function[x, y], {x, -n, n}, {y, -n, n}, PlotLegends -> Automatic, Contours -> 30]
